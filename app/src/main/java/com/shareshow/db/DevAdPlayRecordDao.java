package com.shareshow.db;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "DEV_AD_PLAY_RECORD".
*/
public class DevAdPlayRecordDao extends AbstractDao<DevAdPlayRecord, Long> {

    public static final String TABLENAME = "DEV_AD_PLAY_RECORD";

    /**
     * Properties of entity DevAdPlayRecord.<br/>
     * Can be used for QueryBuilder and for referencing column names.
     */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property DarDevid = new Property(1, String.class, "darDevid", false, "DAR_DEVID");
        public final static Property DarDate = new Property(2, String.class, "darDate", false, "DAR_DATE");
        public final static Property DarFileid = new Property(3, String.class, "darFileid", false, "DAR_FILEID");
        public final static Property DarPlaynum = new Property(4, Integer.class, "darPlaynum", false, "DAR_PLAYNUM");
        public final static Property DarClicknum = new Property(5, Integer.class, "darClicknum", false, "DAR_CLICKNUM");
    }


    public DevAdPlayRecordDao(DaoConfig config) {
        super(config);
    }
    
    public DevAdPlayRecordDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"DEV_AD_PLAY_RECORD\" (" + //
                "\"_id\" INTEGER PRIMARY KEY AUTOINCREMENT ," + // 0: id
                "\"DAR_DEVID\" TEXT," + // 1: darDevid
                "\"DAR_DATE\" TEXT," + // 2: darDate
                "\"DAR_FILEID\" TEXT," + // 3: darFileid
                "\"DAR_PLAYNUM\" INTEGER," + // 4: darPlaynum
                "\"DAR_CLICKNUM\" INTEGER);"); // 5: darClicknum
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"DEV_AD_PLAY_RECORD\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, DevAdPlayRecord entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String darDevid = entity.getDarDevid();
        if (darDevid != null) {
            stmt.bindString(2, darDevid);
        }
 
        String darDate = entity.getDarDate();
        if (darDate != null) {
            stmt.bindString(3, darDate);
        }
 
        String darFileid = entity.getDarFileid();
        if (darFileid != null) {
            stmt.bindString(4, darFileid);
        }
 
        Integer darPlaynum = entity.getDarPlaynum();
        if (darPlaynum != null) {
            stmt.bindLong(5, darPlaynum);
        }
 
        Integer darClicknum = entity.getDarClicknum();
        if (darClicknum != null) {
            stmt.bindLong(6, darClicknum);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, DevAdPlayRecord entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
 
        String darDevid = entity.getDarDevid();
        if (darDevid != null) {
            stmt.bindString(2, darDevid);
        }
 
        String darDate = entity.getDarDate();
        if (darDate != null) {
            stmt.bindString(3, darDate);
        }
 
        String darFileid = entity.getDarFileid();
        if (darFileid != null) {
            stmt.bindString(4, darFileid);
        }
 
        Integer darPlaynum = entity.getDarPlaynum();
        if (darPlaynum != null) {
            stmt.bindLong(5, darPlaynum);
        }
 
        Integer darClicknum = entity.getDarClicknum();
        if (darClicknum != null) {
            stmt.bindLong(6, darClicknum);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public DevAdPlayRecord readEntity(Cursor cursor, int offset) {
        DevAdPlayRecord entity = new DevAdPlayRecord( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // darDevid
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // darDate
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // darFileid
            cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4), // darPlaynum
            cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5) // darClicknum
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, DevAdPlayRecord entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setDarDevid(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setDarDate(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setDarFileid(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setDarPlaynum(cursor.isNull(offset + 4) ? null : cursor.getInt(offset + 4));
        entity.setDarClicknum(cursor.isNull(offset + 5) ? null : cursor.getInt(offset + 5));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(DevAdPlayRecord entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(DevAdPlayRecord entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    public boolean hasKey(DevAdPlayRecord entity) {
        return entity.getId() != null;
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
